version: 2
## Customize the test machine
jobs:
  build:
    working_directory: ~/ilastik/ilastik
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CONDA_ROOT: /home/ubuntu/miniconda
      TEST_ENV_NAME: test-env
      ILASTIK_ROOT: /home/ubuntu/ilastik
      VOLUMINA_SHOW_3D_WIDGET: 0
    docker:
    - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
    steps:
    # add interpolated environment variables (CircleCI 2.0 does not support direct interpolation)
    - run: echo 'export PATH=${CONDA_ROOT}/bin:${PATH}' >> $BASH_ENV
    - checkout
    # Prepare for artifact and test results  collection equivalent to how it was done on 1.0.
    # In many cases you can simplify this from what is generated here.
    # 'See docs on artifact collection here https://circleci.com/docs/2.0/artifacts/'
    # - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    # Restore the dependency cache
    - restore_cache:
        keys:
        # This branch if available
        - v1.33b5-dep-{{ .Branch }}-
        # Default branch if not
        - v1.33b5-dep-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - v1.33b5-dep-
    - run: >
        if [[ ! -d ${CONDA_ROOT} ]]; then
            echo "Installing Miniconda...";
            wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh &&
            bash Miniconda3-latest-Linux-x86_64.sh -b -p ${CONDA_ROOT};
        else
            echo "Using cached Miniconda install";
        fi
    - run: conda init bash
    - run: >
        conda config --set always_yes yes --set changeps1 no &&
        conda update -q conda &&
        conda install -n base -c conda-forge conda-build
    - run: git clone http://github.com/ilastik/ilastik-meta ${ILASTIK_ROOT}/ilastik-meta
    - run: >
        cd ${ILASTIK_ROOT}/ilastik-meta &&
        git submodule init &&
        git submodule update --recursive &&
        git submodule foreach "git checkout master"
    - run: >
        rm -rf ${ILASTIK_ROOT}/ilastik-meta/ilastik &&
        ln -s `pwd` ${ILASTIK_ROOT}/ilastik-meta/ilastik
    - run: >
        conda activate base &&
        cd ${ILASTIK_ROOT}/ilastik-meta &&
        python ilastik/scripts/devenv.py create -n ${TEST_ENV_NAME}
        -p pytest-qt ilastik-dependencies-no-solvers
        -c ilastik-forge conda-forge defaults
    # Save dependency cache
    - save_cache:
        key: v1.33b5-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - /home/ubuntu/miniconda
    # Test
    - run: >
        conda activate ${TEST_ENV_NAME} &&
        cd ${ILASTIK_ROOT}/ilastik-meta/ilastik/tests &&
        xvfb-run --server-args="-screen 0 1024x768x24" pytest --run-legacy-gui
    # Teardown
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts of this that are relevant in each
    # Save test results
    # - store_test_results:
    #     path: /tmp/circleci-test-results
    # # Save artifacts
    # - store_artifacts:
    #     path: /tmp/circleci-artifacts
    # - store_artifacts:
    #     path: /tmp/circleci-test-results
